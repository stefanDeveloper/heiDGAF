services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.3
    networks:
      - heidgaf
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
    volumes:
      - zk-data:/var/lib/zookeeper/data
      - zk-txn-logs:/var/lib/zookeeper/log
    healthcheck:
      test: ["CMD-SHELL", "curl -s localhost:8080/commands | grep ruok"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      placement:
        constraints: [node.hostname == heidgaf-1]
      restart_policy:
        condition: on-failure

  kafka1:
    image: confluentinc/cp-kafka:7.9.3
    networks:
      - heidgaf
    ports:
      - "8097:8097"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://192.168.174.52:8097
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:19092,EXTERNAL://0.0.0.0:8097
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    volumes:
      - kafka-data1:/var/lib/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 19092"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      placement:
        constraints: [node.hostname == heidgaf-1]
      restart_policy:
        condition: on-failure

  kafka2:
    image: confluentinc/cp-kafka:7.9.3
    networks:
      - heidgaf
    ports:
      - "8098:8098"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:19093,EXTERNAL://192.168.174.52:8098
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:19093,EXTERNAL://0.0.0.0:8098
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    volumes:
      - kafka-data2:/var/lib/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 19093"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      placement:
        constraints: [node.hostname == heidgaf-1]
      restart_policy:
        condition: on-failure

  kafka3:
    image: confluentinc/cp-kafka:7.9.3
    networks:
      - heidgaf
    ports:
      - "8099:8099"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:19094,EXTERNAL://192.168.174.52:8099
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:19094,EXTERNAL://0.0.0.0:8099
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    volumes:
      - kafka-data3:/var/lib/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 19094"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      placement:
        constraints: [node.hostname == heidgaf-1]
      restart_policy:
        condition: on-failure

networks:
  heidgaf:
    external: true

volumes:
  kafka-data1:
  kafka-data2:
  kafka-data3:
  zk-data:
  zk-txn-logs:
